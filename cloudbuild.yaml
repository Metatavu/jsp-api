steps:
#-Testing
- id: git-submodule
  name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  env: ['GIT_DISCOVERY_ACROSS_FILESYSTEM=1']
  args:
  - '-c'
  - |
    git init
    git config -f .gitmodules submodule.jsp-api-spec.url https://github.com/Metatavu/jsp-api-spec.git
    git submodule init
    git submodule update
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    export DEBIAN_FRONTEND=noninteractive \
    && apt update \
    && apt install sudo \
    && apt install unzip \
    && curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" \
    && unzip awscli-bundle.zip \
    && sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \
    && mkdir ~/.aws/ \
    && echo "[default]" >> ~/.aws/credentials \
    && echo "aws_access_key_id = ${_AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials \
    && echo "aws_secret_access_key = ${_AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials \
    && _UPDATED_TOKEN=$(aws ecr get-login-password --region ${_AWS_DEFAULT_REGION}) \
    && echo "$(aws ecr get-login-password --region ${_AWS_DEFAULT_REGION})" >> ~/.aws/test \
    
- name: 'gradle:6.7.0-jdk11'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod +x gradlew
    ./gradlew --stacktrace clean war

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker login -u AWS -p $(cat ~/.aws/test) ${_AWS_ID}.dkr.ecr.${_AWS_DEFAULT_REGION}.amazonaws.com
    
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: 
  - '-c'
  - |
    docker build -t ${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8) .
    
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: 
  - '-c'
  - |
    docker push ${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8)
    
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  env:
  - "AWS_ACCESS_KEY_ID=${_AWS_ACCESS_KEY_ID}"
  - "AWS_SECRET_ACCESS_KEY=${_AWS_SECRET_ACCESS_KEY}"
  - "AWS_DEFAULT_REGION=${_AWS_DEFAULT_REGION}"
  args:
  - '-c'
  - |
    if [ -n "${_DEPLOYMENT}" ]; then
      ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws &&
      aws eks --region ${_AWS_DEFAULT_REGION} update-kubeconfig --name ${_CLUSTER} && 
      kubectl -n ${_NAMESPACE} set image deployment/${_DEPLOYMENT_NAME} ${_DEPLOYMENT_NAME}=${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8)
    fi

